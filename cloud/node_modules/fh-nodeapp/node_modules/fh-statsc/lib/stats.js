// Copyright (c) FeedHenry 2011 
//
// fhstats - FeedHenry stats client library
//
var util = require('util');
var async = require('async');

function FHStats(cfg) {
  var config = cfg;
  var host = cfg.host || 'localhost';  
  var port = cfg.port || 8125;
  var enabled = cfg.enabled || false;
  var socket;

  if (enabled) {
    if (!socket) socket = require('dgram').createSocket('udp4');
  }

  var sendQ = async.queue(function (data, cb) {
    send(data, cb);
  }, 10);

  // TODO - needs to send in batches every second or so
  function send(data, cb) {
    if (enabled) {
      var send_data = new Buffer(data);
      try {        
        socket.send(send_data, 0, send_data.length, port, host, function (err, bytes) {         
          if(cb) return cb(err, bytes);
        });
      } catch (x) {      
        // Purposely ignored.. 
        cb();
      }
    }else cb();
  };

  function inc(stat, cb) {
    sendQ.push(stat + ":1|c", cb);
  };
  
  function dec(stat, cb) {
    sendQ.push(stat + ":-1|c", cb);  
  };

  function timing(stat, time, cb) {
    sendQ.push(stat + ":" + time + "|ms", cb); 
  };

  function gauge(stat, value, cb) {
    sendQ.push(stat + ":" + value + "|g", cb);  
  };

  function close() {
    try {
      if (socket) socket.close(); 
    } catch (x) {
      // purposely ignored
    }
  };
  
  return {
    inc: inc,
    dec: dec,
    timing: timing,
    gauge: gauge,
    close: close
  };
}
  
exports.FHStats = FHStats;
  
