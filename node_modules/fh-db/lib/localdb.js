var fhditcher = require('./ditcher.js');

var ditch;

function getDitchHandle(cb) {
  var my_db_config = {
    database: {
      host: '127.0.0.1',
      port: 27017,
      name: 'FH_LOCAL'
    }
  };

  var my_db_logger = {
    info: function (s) {console.log("LOCALDB info", s);},
    error: function (s) {console.log("LOCALDB error", s);},
    warn: function (s) {console.log("LOCALDB warn", s);},
    warning: function (s) {console.log("LOCALDB warning", s);},
    debug: function (s) {console.log("LOCALDB debug", s);}
  };

  if(!ditch) {
    var ditcher = new fhditcher.Ditcher(my_db_config, my_db_logger, "fhc local data", function() {
      console.log("Ditcher initialised");
      ditch = ditcher;
      return cb(ditch);
    });
  } else {
    return cb(ditch);      
  }
}

var local_db = function (params, cb) {
  var action = params.act; 
  console.log("DBACTION: ", action);

  getDitchHandle(function (ditch) {
    console.log('got ditch');
    if ('create' === action) {
      console.log('about to: create');
      ditch.doCreate(params, function (err, id) {
        console.log('back from create: err', err, "id:", id);
        if (err) return cb(err);
        return cb(undefined, JSON.parse(JSON.stringify(id)));
      });
    } else if ('list' === action) {
      ditch.doList(params, function (err, id) {
        if (err) return cb(err);
        var listResp = {count:id.length, list:id};
        return cb(undefined, JSON.parse(JSON.stringify(listResp)));
      });
    } else if ('read' === action) {
      console.log('about to: read, params: ', params);
      ditch.doRead(params, function (err, doc) {
        console.log('back from create: err', err, "doc:", doc);
        if (err) return cb(err);
        return cb(undefined, JSON.parse(JSON.stringify(doc)));
      });
    } else if ('delete' === action) {
      ditch.doDelete(params, function (err, doc) {
        if (err) return cb(err);
        return cb(undefined, JSON.parse(JSON.stringify(doc)));
      });
    } else if ('deleteall' === action) {
      ditch.doDeleteAll(params, function (err, doc) {
        if (err) return cb(err);
        return cb(undefined, JSON.parse(JSON.stringify(doc)));
      });
    } else if ('update' === action) {
      ditch.doUpdate(params, function (err, doc) {
        if (err) return cb(err);
        return cb(undefined, JSON.parse(JSON.stringify(doc)));
      });
    } else if ('index' === action) {
      ditch.doIndex(params, function (err, doc) {
        if (err) return cb(err);
        return cb(undefined, JSON.parse(JSON.stringify(doc)));
      });
    } else {
      return cb(new Error("Unknown fh.db action"));
    } 
  });
};

exports.local_db = local_db;
exports.Ditcher = fhditcher.Ditcher;

