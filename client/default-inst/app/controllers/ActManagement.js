/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['app/controllers/ActManagement.js']) {
  _$jscoverage['app/controllers/ActManagement.js'] = [];
  _$jscoverage['app/controllers/ActManagement.js'][2] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][3] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][5] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][7] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][12] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][15] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][18] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][19] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][20] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][21] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][24] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][27] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][37] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][43] = 0;
  _$jscoverage['app/controllers/ActManagement.js'][50] = 0;
}
_$jscoverage['app/controllers/ActManagement.js'][2]++;
var sendAction = (function (act, options, successFn, failFn) {
  _$jscoverage['app/controllers/ActManagement.js'][3]++;
  Act.call(act, options, (function (res) {
  _$jscoverage['app/controllers/ActManagement.js'][5]++;
  App.log(act, "called, with params", options);
}), (function (msg, err) {
  _$jscoverage['app/controllers/ActManagement.js'][7]++;
  App.log(act, "failed, with params", options);
}));
});
_$jscoverage['app/controllers/ActManagement.js'][12]++;
var ActManagementFsm = machina.Fsm.extend({initialize: (function () {
  _$jscoverage['app/controllers/ActManagement.js'][15]++;
  var self = this;
  _$jscoverage['app/controllers/ActManagement.js'][18]++;
  self.httpConnectivityFsm.on("transition", (function (data) {
  _$jscoverage['app/controllers/ActManagement.js'][19]++;
  if (data.toState === "online") {
    _$jscoverage['app/controllers/ActManagement.js'][20]++;
    self.handle("transportAvailable");
  }
  else {
    _$jscoverage['app/controllers/ActManagement.js'][21]++;
    if (data.toState === "offline" || data.toState === "probing" || data.toState === "disconnected") {
      _$jscoverage['app/controllers/ActManagement.js'][24]++;
      self.handle("transportUnavailable");
    }
  }
}));
  _$jscoverage['app/controllers/ActManagement.js'][27]++;
  self.initialState = (self.httpConnectivityFsm.state === "online")? "sending": "queueing";
}), initialState: "queueing", states: {queueing: {sendHttpRequest: (function () {
  _$jscoverage['app/controllers/ActManagement.js'][37]++;
  this.deferUntilTransition("sending");
}), transportAvailable: "sending"}, sending: {sendHttpRequest: (function (act, options, successFn, failFn) {
  _$jscoverage['app/controllers/ActManagement.js'][43]++;
  sendAction.call(this, act, options, successFn, failFn);
}), transportUnavailable: "queueing"}}, mayAct: (function (act, options, successFn, failFn) {
  _$jscoverage['app/controllers/ActManagement.js'][50]++;
  this.handle("sendHttpRequest", act, options, successFn, failFn);
})});
_$jscoverage['app/controllers/ActManagement.js'].source = ["// helper function used by the FSM below","var sendAction = function(act, options, successFn, failFn) {","    Act.call(act, options,","        function(res){","            App.log(act,\"called, with params\",options);","        }, function(msg, err){","            App.log(act,\"failed, with params\",options);","        }","    );","};","","var ActManagementFsm = machina.Fsm.extend({","","    initialize: function() {","        var self = this;","        // we cause this FSM to transition based on the","        // state reported by the httpConnectivityFsm","        self.httpConnectivityFsm.on(\"transition\", function( data ) {","            if( data.toState === \"online\" ) {","                self.handle( \"transportAvailable\" );","            } else if ( data.toState === \"offline\" || ","                        data.toState === \"probing\" ||","                        data.toState === \"disconnected\" ) {","                self.handle( \"transportUnavailable\" );","            }","        });","        self.initialState = (self.httpConnectivityFsm.state === \"online\") ? ","            \"sending\" : ","            \"queueing\";","    },","    ","    initialState: \"queueing\",","    ","    states: {","        queueing: {","            sendHttpRequest: function() {","                this.deferUntilTransition('sending');","            },","            transportAvailable: \"sending\"","        },","        sending: {","            sendHttpRequest: function( act, options, successFn,  failFn ) {","                sendAction.call(this, act, options, successFn,  failFn);","            },","            transportUnavailable: \"queueing\"","        }","    },","    ","    mayAct : function( act, options, successFn,  failFn ) {","        this.handle( \"sendHttpRequest\", act, options, successFn,  failFn);","    }","});"];
