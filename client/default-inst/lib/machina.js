/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['lib/machina.js']) {
  _$jscoverage['lib/machina.js'] = [];
  _$jscoverage['lib/machina.js'][7] = 0;
  _$jscoverage['lib/machina.js'][8] = 0;
  _$jscoverage['lib/machina.js'][10] = 0;
  _$jscoverage['lib/machina.js'][11] = 0;
  _$jscoverage['lib/machina.js'][12] = 0;
  _$jscoverage['lib/machina.js'][14] = 0;
  _$jscoverage['lib/machina.js'][16] = 0;
  _$jscoverage['lib/machina.js'][17] = 0;
  _$jscoverage['lib/machina.js'][21] = 0;
  _$jscoverage['lib/machina.js'][24] = 0;
  _$jscoverage['lib/machina.js'][25] = 0;
  _$jscoverage['lib/machina.js'][26] = 0;
  _$jscoverage['lib/machina.js'][27] = 0;
  _$jscoverage['lib/machina.js'][28] = 0;
  _$jscoverage['lib/machina.js'][29] = 0;
  _$jscoverage['lib/machina.js'][30] = 0;
  _$jscoverage['lib/machina.js'][31] = 0;
  _$jscoverage['lib/machina.js'][32] = 0;
  _$jscoverage['lib/machina.js'][33] = 0;
  _$jscoverage['lib/machina.js'][34] = 0;
  _$jscoverage['lib/machina.js'][36] = 0;
  _$jscoverage['lib/machina.js'][37] = 0;
  _$jscoverage['lib/machina.js'][38] = 0;
  _$jscoverage['lib/machina.js'][42] = 0;
  _$jscoverage['lib/machina.js'][59] = 0;
  _$jscoverage['lib/machina.js'][60] = 0;
  _$jscoverage['lib/machina.js'][62] = 0;
  _$jscoverage['lib/machina.js'][65] = 0;
  _$jscoverage['lib/machina.js'][68] = 0;
  _$jscoverage['lib/machina.js'][69] = 0;
  _$jscoverage['lib/machina.js'][70] = 0;
  _$jscoverage['lib/machina.js'][75] = 0;
  _$jscoverage['lib/machina.js'][76] = 0;
  _$jscoverage['lib/machina.js'][78] = 0;
  _$jscoverage['lib/machina.js'][79] = 0;
  _$jscoverage['lib/machina.js'][81] = 0;
  _$jscoverage['lib/machina.js'][82] = 0;
  _$jscoverage['lib/machina.js'][84] = 0;
  _$jscoverage['lib/machina.js'][87] = 0;
  _$jscoverage['lib/machina.js'][88] = 0;
  _$jscoverage['lib/machina.js'][91] = 0;
  _$jscoverage['lib/machina.js'][92] = 0;
  _$jscoverage['lib/machina.js'][93] = 0;
  _$jscoverage['lib/machina.js'][96] = 0;
  _$jscoverage['lib/machina.js'][99] = 0;
  _$jscoverage['lib/machina.js'][103] = 0;
  _$jscoverage['lib/machina.js'][104] = 0;
  _$jscoverage['lib/machina.js'][105] = 0;
  _$jscoverage['lib/machina.js'][106] = 0;
  _$jscoverage['lib/machina.js'][107] = 0;
  _$jscoverage['lib/machina.js'][108] = 0;
  _$jscoverage['lib/machina.js'][109] = 0;
  _$jscoverage['lib/machina.js'][113] = 0;
  _$jscoverage['lib/machina.js'][116] = 0;
  _$jscoverage['lib/machina.js'][117] = 0;
  _$jscoverage['lib/machina.js'][118] = 0;
  _$jscoverage['lib/machina.js'][119] = 0;
  _$jscoverage['lib/machina.js'][120] = 0;
  _$jscoverage['lib/machina.js'][122] = 0;
  _$jscoverage['lib/machina.js'][123] = 0;
  _$jscoverage['lib/machina.js'][128] = 0;
  _$jscoverage['lib/machina.js'][129] = 0;
  _$jscoverage['lib/machina.js'][130] = 0;
  _$jscoverage['lib/machina.js'][131] = 0;
  _$jscoverage['lib/machina.js'][133] = 0;
  _$jscoverage['lib/machina.js'][134] = 0;
  _$jscoverage['lib/machina.js'][141] = 0;
  _$jscoverage['lib/machina.js'][142] = 0;
  _$jscoverage['lib/machina.js'][143] = 0;
  _$jscoverage['lib/machina.js'][144] = 0;
  _$jscoverage['lib/machina.js'][145] = 0;
  _$jscoverage['lib/machina.js'][146] = 0;
  _$jscoverage['lib/machina.js'][147] = 0;
  _$jscoverage['lib/machina.js'][148] = 0;
  _$jscoverage['lib/machina.js'][149] = 0;
  _$jscoverage['lib/machina.js'][151] = 0;
  _$jscoverage['lib/machina.js'][152] = 0;
  _$jscoverage['lib/machina.js'][154] = 0;
  _$jscoverage['lib/machina.js'][155] = 0;
  _$jscoverage['lib/machina.js'][156] = 0;
  _$jscoverage['lib/machina.js'][157] = 0;
  _$jscoverage['lib/machina.js'][158] = 0;
  _$jscoverage['lib/machina.js'][159] = 0;
  _$jscoverage['lib/machina.js'][160] = 0;
  _$jscoverage['lib/machina.js'][161] = 0;
  _$jscoverage['lib/machina.js'][162] = 0;
  _$jscoverage['lib/machina.js'][163] = 0;
  _$jscoverage['lib/machina.js'][164] = 0;
  _$jscoverage['lib/machina.js'][167] = 0;
  _$jscoverage['lib/machina.js'][169] = 0;
  _$jscoverage['lib/machina.js'][173] = 0;
  _$jscoverage['lib/machina.js'][174] = 0;
  _$jscoverage['lib/machina.js'][175] = 0;
  _$jscoverage['lib/machina.js'][176] = 0;
  _$jscoverage['lib/machina.js'][177] = 0;
  _$jscoverage['lib/machina.js'][178] = 0;
  _$jscoverage['lib/machina.js'][179] = 0;
  _$jscoverage['lib/machina.js'][180] = 0;
  _$jscoverage['lib/machina.js'][181] = 0;
  _$jscoverage['lib/machina.js'][182] = 0;
  _$jscoverage['lib/machina.js'][183] = 0;
  _$jscoverage['lib/machina.js'][185] = 0;
  _$jscoverage['lib/machina.js'][186] = 0;
  _$jscoverage['lib/machina.js'][187] = 0;
  _$jscoverage['lib/machina.js'][189] = 0;
  _$jscoverage['lib/machina.js'][190] = 0;
  _$jscoverage['lib/machina.js'][192] = 0;
  _$jscoverage['lib/machina.js'][194] = 0;
  _$jscoverage['lib/machina.js'][198] = 0;
  _$jscoverage['lib/machina.js'][199] = 0;
  _$jscoverage['lib/machina.js'][201] = 0;
  _$jscoverage['lib/machina.js'][203] = 0;
  _$jscoverage['lib/machina.js'][204] = 0;
  _$jscoverage['lib/machina.js'][205] = 0;
  _$jscoverage['lib/machina.js'][206] = 0;
  _$jscoverage['lib/machina.js'][210] = 0;
  _$jscoverage['lib/machina.js'][211] = 0;
  _$jscoverage['lib/machina.js'][212] = 0;
  _$jscoverage['lib/machina.js'][213] = 0;
  _$jscoverage['lib/machina.js'][214] = 0;
  _$jscoverage['lib/machina.js'][215] = 0;
  _$jscoverage['lib/machina.js'][217] = 0;
  _$jscoverage['lib/machina.js'][218] = 0;
  _$jscoverage['lib/machina.js'][219] = 0;
  _$jscoverage['lib/machina.js'][222] = 0;
  _$jscoverage['lib/machina.js'][226] = 0;
  _$jscoverage['lib/machina.js'][227] = 0;
  _$jscoverage['lib/machina.js'][228] = 0;
  _$jscoverage['lib/machina.js'][229] = 0;
  _$jscoverage['lib/machina.js'][233] = 0;
  _$jscoverage['lib/machina.js'][234] = 0;
  _$jscoverage['lib/machina.js'][235] = 0;
  _$jscoverage['lib/machina.js'][236] = 0;
  _$jscoverage['lib/machina.js'][240] = 0;
  _$jscoverage['lib/machina.js'][241] = 0;
  _$jscoverage['lib/machina.js'][242] = 0;
  _$jscoverage['lib/machina.js'][244] = 0;
  _$jscoverage['lib/machina.js'][245] = 0;
  _$jscoverage['lib/machina.js'][249] = 0;
  _$jscoverage['lib/machina.js'][254] = 0;
  _$jscoverage['lib/machina.js'][255] = 0;
  _$jscoverage['lib/machina.js'][257] = 0;
  _$jscoverage['lib/machina.js'][258] = 0;
  _$jscoverage['lib/machina.js'][259] = 0;
  _$jscoverage['lib/machina.js'][261] = 0;
  _$jscoverage['lib/machina.js'][268] = 0;
  _$jscoverage['lib/machina.js'][270] = 0;
  _$jscoverage['lib/machina.js'][272] = 0;
  _$jscoverage['lib/machina.js'][273] = 0;
  _$jscoverage['lib/machina.js'][278] = 0;
  _$jscoverage['lib/machina.js'][279] = 0;
  _$jscoverage['lib/machina.js'][281] = 0;
  _$jscoverage['lib/machina.js'][282] = 0;
  _$jscoverage['lib/machina.js'][287] = 0;
  _$jscoverage['lib/machina.js'][291] = 0;
  _$jscoverage['lib/machina.js'][292] = 0;
  _$jscoverage['lib/machina.js'][296] = 0;
  _$jscoverage['lib/machina.js'][297] = 0;
  _$jscoverage['lib/machina.js'][301] = 0;
  _$jscoverage['lib/machina.js'][302] = 0;
  _$jscoverage['lib/machina.js'][306] = 0;
  _$jscoverage['lib/machina.js'][309] = 0;
  _$jscoverage['lib/machina.js'][311] = 0;
  _$jscoverage['lib/machina.js'][315] = 0;
  _$jscoverage['lib/machina.js'][316] = 0;
  _$jscoverage['lib/machina.js'][317] = 0;
  _$jscoverage['lib/machina.js'][318] = 0;
  _$jscoverage['lib/machina.js'][320] = 0;
  _$jscoverage['lib/machina.js'][324] = 0;
  _$jscoverage['lib/machina.js'][325] = 0;
  _$jscoverage['lib/machina.js'][327] = 0;
  _$jscoverage['lib/machina.js'][328] = 0;
  _$jscoverage['lib/machina.js'][331] = 0;
  _$jscoverage['lib/machina.js'][332] = 0;
  _$jscoverage['lib/machina.js'][336] = 0;
  _$jscoverage['lib/machina.js'][337] = 0;
  _$jscoverage['lib/machina.js'][338] = 0;
  _$jscoverage['lib/machina.js'][339] = 0;
  _$jscoverage['lib/machina.js'][348] = 0;
  _$jscoverage['lib/machina.js'][349] = 0;
}
_$jscoverage['lib/machina.js'][7]++;
(function (root, factory) {
  _$jscoverage['lib/machina.js'][8]++;
  if (typeof module === "object" && module.exports) {
    _$jscoverage['lib/machina.js'][10]++;
    module.exports = (function (_) {
  _$jscoverage['lib/machina.js'][11]++;
  _ = _ || require("underscore");
  _$jscoverage['lib/machina.js'][12]++;
  return factory(_);
});
  }
  else {
    _$jscoverage['lib/machina.js'][14]++;
    if (typeof define === "function" && define.amd) {
      _$jscoverage['lib/machina.js'][16]++;
      define(["underscore"], (function (_) {
  _$jscoverage['lib/machina.js'][17]++;
  return factory(_, root);
}));
    }
    else {
      _$jscoverage['lib/machina.js'][21]++;
      root.machina = factory(root._, root);
    }
  }
})(this, (function (_, global, undefined) {
  _$jscoverage['lib/machina.js'][24]++;
  var slice = [].slice;
  _$jscoverage['lib/machina.js'][25]++;
  var NEXT_TRANSITION = "transition";
  _$jscoverage['lib/machina.js'][26]++;
  var NEXT_HANDLER = "handler";
  _$jscoverage['lib/machina.js'][27]++;
  var HANDLING = "handling";
  _$jscoverage['lib/machina.js'][28]++;
  var HANDLED = "handled";
  _$jscoverage['lib/machina.js'][29]++;
  var NO_HANDLER = "nohandler";
  _$jscoverage['lib/machina.js'][30]++;
  var TRANSITION = "transition";
  _$jscoverage['lib/machina.js'][31]++;
  var INVALID_STATE = "invalidstate";
  _$jscoverage['lib/machina.js'][32]++;
  var DEFERRED = "deferred";
  _$jscoverage['lib/machina.js'][33]++;
  var NEW_FSM = "newfsm";
  _$jscoverage['lib/machina.js'][34]++;
  var utils = {makeFsmNamespace: (function () {
  _$jscoverage['lib/machina.js'][36]++;
  var machinaCount = 0;
  _$jscoverage['lib/machina.js'][37]++;
  return (function () {
  _$jscoverage['lib/machina.js'][38]++;
  return "fsm." + machinaCount++;
});
})(), getDefaultOptions: (function () {
  _$jscoverage['lib/machina.js'][42]++;
  return ({initialState: "uninitialized", eventListeners: {"*": []}, states: {}, eventQueue: [], namespace: utils.makeFsmNamespace(), targetReplayState: "", state: undefined, priorState: undefined, _priorAction: "", _currentAction: ""});
})};
  _$jscoverage['lib/machina.js'][59]++;
  if (! _.deepExtend) {
    _$jscoverage['lib/machina.js'][60]++;
    var behavior = {"*": (function (obj, sourcePropKey, sourcePropVal) {
  _$jscoverage['lib/machina.js'][62]++;
  obj[sourcePropKey] = sourcePropVal;
}), "object": (function (obj, sourcePropKey, sourcePropVal) {
  _$jscoverage['lib/machina.js'][65]++;
  obj[sourcePropKey] = deepExtend({}, obj[sourcePropKey] || {}, sourcePropVal);
}), "array": (function (obj, sourcePropKey, sourcePropVal) {
  _$jscoverage['lib/machina.js'][68]++;
  obj[sourcePropKey] = [];
  _$jscoverage['lib/machina.js'][69]++;
  _.each(sourcePropVal, (function (item, idx) {
  _$jscoverage['lib/machina.js'][70]++;
  behavior[getHandlerName(item)](obj[sourcePropKey], idx, item);
}), this);
})}, getActualType = (function (val) {
  _$jscoverage['lib/machina.js'][75]++;
  if (_.isArray(val)) {
    _$jscoverage['lib/machina.js'][76]++;
    return "array";
  }
  _$jscoverage['lib/machina.js'][78]++;
  if (_.isDate(val)) {
    _$jscoverage['lib/machina.js'][79]++;
    return "date";
  }
  _$jscoverage['lib/machina.js'][81]++;
  if (_.isRegExp(val)) {
    _$jscoverage['lib/machina.js'][82]++;
    return "regex";
  }
  _$jscoverage['lib/machina.js'][84]++;
  return typeof val;
}), getHandlerName = (function (val) {
  _$jscoverage['lib/machina.js'][87]++;
  var propType = getActualType(val);
  _$jscoverage['lib/machina.js'][88]++;
  return behavior[propType]? propType: "*";
}), deepExtend = (function (obj) {
  _$jscoverage['lib/machina.js'][91]++;
  _.each(slice.call(arguments, 1), (function (source) {
  _$jscoverage['lib/machina.js'][92]++;
  _.each(source, (function (sourcePropVal, sourcePropKey) {
  _$jscoverage['lib/machina.js'][93]++;
  behavior[getHandlerName(sourcePropVal)](obj, sourcePropKey, sourcePropVal);
}));
}));
  _$jscoverage['lib/machina.js'][96]++;
  return obj;
});
    _$jscoverage['lib/machina.js'][99]++;
    _.mixin({deepExtend: deepExtend});
  }
  _$jscoverage['lib/machina.js'][103]++;
  var Fsm = (function (options) {
  _$jscoverage['lib/machina.js'][104]++;
  _.extend(this, options);
  _$jscoverage['lib/machina.js'][105]++;
  _.defaults(this, utils.getDefaultOptions());
  _$jscoverage['lib/machina.js'][106]++;
  this.initialize.apply(this, arguments);
  _$jscoverage['lib/machina.js'][107]++;
  machina.emit(NEW_FSM, this);
  _$jscoverage['lib/machina.js'][108]++;
  if (this.initialState) {
    _$jscoverage['lib/machina.js'][109]++;
    this.transition(this.initialState);
  }
});
  _$jscoverage['lib/machina.js'][113]++;
  _.extend(Fsm.prototype, {initialize: (function () {
}), emit: (function (eventName) {
  _$jscoverage['lib/machina.js'][116]++;
  var args = arguments;
  _$jscoverage['lib/machina.js'][117]++;
  if (this.eventListeners["*"]) {
    _$jscoverage['lib/machina.js'][118]++;
    _.each(this.eventListeners["*"], (function (callback) {
  _$jscoverage['lib/machina.js'][119]++;
  try {
    _$jscoverage['lib/machina.js'][120]++;
    callback.apply(this, slice.call(args, 0));
  }
  catch (exception) {
    _$jscoverage['lib/machina.js'][122]++;
    if (console && typeof console.log !== "undefined") {
      _$jscoverage['lib/machina.js'][123]++;
      console.log(exception.toString());
    }
  }
}), this);
  }
  _$jscoverage['lib/machina.js'][128]++;
  if (this.eventListeners[eventName]) {
    _$jscoverage['lib/machina.js'][129]++;
    _.each(this.eventListeners[eventName], (function (callback) {
  _$jscoverage['lib/machina.js'][130]++;
  try {
    _$jscoverage['lib/machina.js'][131]++;
    callback.apply(this, slice.call(args, 1));
  }
  catch (exception) {
    _$jscoverage['lib/machina.js'][133]++;
    if (console && typeof console.log !== "undefined") {
      _$jscoverage['lib/machina.js'][134]++;
      console.log(exception.toString());
    }
  }
}), this);
  }
}), handle: (function (inputType) {
  _$jscoverage['lib/machina.js'][141]++;
  if (! this.inExitHandler) {
    _$jscoverage['lib/machina.js'][142]++;
    var states = this.states, current = this.state, args = slice.call(arguments, 0), handlerName, handler, catchAll, action;
    _$jscoverage['lib/machina.js'][143]++;
    this.currentActionArgs = args;
    _$jscoverage['lib/machina.js'][144]++;
    if (states[current][inputType] || states[current]["*"] || this["*"]) {
      _$jscoverage['lib/machina.js'][145]++;
      handlerName = states[current][inputType]? inputType: "*";
      _$jscoverage['lib/machina.js'][146]++;
      catchAll = handlerName === "*";
      _$jscoverage['lib/machina.js'][147]++;
      if (states[current][handlerName]) {
        _$jscoverage['lib/machina.js'][148]++;
        handler = states[current][handlerName];
        _$jscoverage['lib/machina.js'][149]++;
        action = current + "." + handlerName;
      }
      else {
        _$jscoverage['lib/machina.js'][151]++;
        handler = this["*"];
        _$jscoverage['lib/machina.js'][152]++;
        action = "*";
      }
      _$jscoverage['lib/machina.js'][154]++;
      if (! this._currentAction) {
        _$jscoverage['lib/machina.js'][155]++;
        this._currentAction = action;
      }
      _$jscoverage['lib/machina.js'][156]++;
      this.emit.call(this, HANDLING, {inputType: inputType, args: args.slice(1)});
      _$jscoverage['lib/machina.js'][157]++;
      if (_.isFunction(handler)) {
        _$jscoverage['lib/machina.js'][158]++;
        handler = handler.apply(this, catchAll? args: args.slice(1));
      }
      _$jscoverage['lib/machina.js'][159]++;
      if (_.isString(handler)) {
        _$jscoverage['lib/machina.js'][160]++;
        this.transition(handler);
      }
      _$jscoverage['lib/machina.js'][161]++;
      this.emit.call(this, HANDLED, {inputType: inputType, args: args.slice(1)});
      _$jscoverage['lib/machina.js'][162]++;
      this._priorAction = this._currentAction;
      _$jscoverage['lib/machina.js'][163]++;
      this._currentAction = "";
      _$jscoverage['lib/machina.js'][164]++;
      this.processQueue(NEXT_HANDLER);
    }
    else {
      _$jscoverage['lib/machina.js'][167]++;
      this.emit.call(this, NO_HANDLER, {inputType: inputType, args: args.slice(1)});
    }
    _$jscoverage['lib/machina.js'][169]++;
    this.currentActionArgs = undefined;
  }
}), transition: (function (newState) {
  _$jscoverage['lib/machina.js'][173]++;
  if (! this.inExitHandler && newState !== this.state) {
    _$jscoverage['lib/machina.js'][174]++;
    var oldState;
    _$jscoverage['lib/machina.js'][175]++;
    if (this.states[newState]) {
      _$jscoverage['lib/machina.js'][176]++;
      this.targetReplayState = newState;
      _$jscoverage['lib/machina.js'][177]++;
      this.priorState = this.state;
      _$jscoverage['lib/machina.js'][178]++;
      this.state = newState;
      _$jscoverage['lib/machina.js'][179]++;
      oldState = this.priorState;
      _$jscoverage['lib/machina.js'][180]++;
      if (this.states[oldState] && this.states[oldState]._onExit) {
        _$jscoverage['lib/machina.js'][181]++;
        this.inExitHandler = true;
        _$jscoverage['lib/machina.js'][182]++;
        this.states[oldState]._onExit.call(this);
        _$jscoverage['lib/machina.js'][183]++;
        this.inExitHandler = false;
      }
      _$jscoverage['lib/machina.js'][185]++;
      this.emit.call(this, TRANSITION, {fromState: oldState, action: this._currentAction, toState: newState});
      _$jscoverage['lib/machina.js'][186]++;
      if (this.states[newState]._onEnter) {
        _$jscoverage['lib/machina.js'][187]++;
        this.states[newState]._onEnter.call(this);
      }
      _$jscoverage['lib/machina.js'][189]++;
      if (this.targetReplayState === newState) {
        _$jscoverage['lib/machina.js'][190]++;
        this.processQueue(NEXT_TRANSITION);
      }
      _$jscoverage['lib/machina.js'][192]++;
      return;
    }
    _$jscoverage['lib/machina.js'][194]++;
    this.emit.call(this, INVALID_STATE, {state: this.state, attemptedState: newState});
  }
}), processQueue: (function (type) {
  _$jscoverage['lib/machina.js'][198]++;
  var filterFn = type === NEXT_TRANSITION? (function (item) {
  _$jscoverage['lib/machina.js'][199]++;
  return item.type === NEXT_TRANSITION && ((! item.untilState) || (item.untilState === this.state));
}): (function (item) {
  _$jscoverage['lib/machina.js'][201]++;
  return item.type === NEXT_HANDLER;
});
  _$jscoverage['lib/machina.js'][203]++;
  var toProcess = _.filter(this.eventQueue, filterFn, this);
  _$jscoverage['lib/machina.js'][204]++;
  this.eventQueue = _.difference(this.eventQueue, toProcess);
  _$jscoverage['lib/machina.js'][205]++;
  _.each(toProcess, (function (item) {
  _$jscoverage['lib/machina.js'][206]++;
  this.handle.apply(this, item.args);
}), this);
}), clearQueue: (function (type, name) {
  _$jscoverage['lib/machina.js'][210]++;
  if (! type) {
    _$jscoverage['lib/machina.js'][211]++;
    this.eventQueue = [];
  }
  else {
    _$jscoverage['lib/machina.js'][212]++;
    var filter;
    _$jscoverage['lib/machina.js'][213]++;
    if (type === NEXT_TRANSITION) {
      _$jscoverage['lib/machina.js'][214]++;
      filter = (function (evnt) {
  _$jscoverage['lib/machina.js'][215]++;
  return (evnt.type === NEXT_TRANSITION && (name? evnt.untilState === name: true));
});
    }
    else {
      _$jscoverage['lib/machina.js'][217]++;
      if (type === NEXT_HANDLER) {
        _$jscoverage['lib/machina.js'][218]++;
        filter = (function (evnt) {
  _$jscoverage['lib/machina.js'][219]++;
  return evnt.type === NEXT_HANDLER;
});
      }
    }
    _$jscoverage['lib/machina.js'][222]++;
    this.eventQueue = _.filter(this.eventQueue, filter);
  }
}), deferUntilTransition: (function (stateName) {
  _$jscoverage['lib/machina.js'][226]++;
  if (this.currentActionArgs) {
    _$jscoverage['lib/machina.js'][227]++;
    var queued = {type: NEXT_TRANSITION, untilState: stateName, args: this.currentActionArgs};
    _$jscoverage['lib/machina.js'][228]++;
    this.eventQueue.push(queued);
    _$jscoverage['lib/machina.js'][229]++;
    this.emit.call(this, DEFERRED, {state: this.state, queuedArgs: queued});
  }
}), deferUntilNextHandler: (function () {
  _$jscoverage['lib/machina.js'][233]++;
  if (this.currentActionArgs) {
    _$jscoverage['lib/machina.js'][234]++;
    var queued = {type: NEXT_TRANSITION, args: this.currentActionArgs};
    _$jscoverage['lib/machina.js'][235]++;
    this.eventQueue.push(queued);
    _$jscoverage['lib/machina.js'][236]++;
    this.emit.call(this, DEFERRED, {state: this.state, queuedArgs: queued});
  }
}), on: (function (eventName, callback) {
  _$jscoverage['lib/machina.js'][240]++;
  var self = this;
  _$jscoverage['lib/machina.js'][241]++;
  if (! self.eventListeners[eventName]) {
    _$jscoverage['lib/machina.js'][242]++;
    self.eventListeners[eventName] = [];
  }
  _$jscoverage['lib/machina.js'][244]++;
  self.eventListeners[eventName].push(callback);
  _$jscoverage['lib/machina.js'][245]++;
  return ({eventName: eventName, callback: callback, off: (function () {
  _$jscoverage['lib/machina.js'][249]++;
  self.off(eventName, callback);
})});
}), off: (function (eventName, callback) {
  _$jscoverage['lib/machina.js'][254]++;
  if (! eventName) {
    _$jscoverage['lib/machina.js'][255]++;
    this.eventListeners = {};
  }
  else {
    _$jscoverage['lib/machina.js'][257]++;
    if (this.eventListeners[eventName]) {
      _$jscoverage['lib/machina.js'][258]++;
      if (callback) {
        _$jscoverage['lib/machina.js'][259]++;
        this.eventListeners[eventName] = _.without(this.eventListeners[eventName], callback);
      }
      else {
        _$jscoverage['lib/machina.js'][261]++;
        this.eventListeners[eventName] = [];
      }
    }
  }
})});
  _$jscoverage['lib/machina.js'][268]++;
  Fsm.prototype.trigger = Fsm.prototype.emit;
  _$jscoverage['lib/machina.js'][270]++;
  var ctor = (function () {
});
  _$jscoverage['lib/machina.js'][272]++;
  var inherits = (function (parent, protoProps, staticProps) {
  _$jscoverage['lib/machina.js'][273]++;
  var fsm;
  _$jscoverage['lib/machina.js'][278]++;
  if (protoProps && protoProps.hasOwnProperty("constructor")) {
    _$jscoverage['lib/machina.js'][279]++;
    fsm = protoProps.constructor;
  }
  else {
    _$jscoverage['lib/machina.js'][281]++;
    fsm = (function () {
  _$jscoverage['lib/machina.js'][282]++;
  parent.apply(this, arguments);
});
  }
  _$jscoverage['lib/machina.js'][287]++;
  _.deepExtend(fsm, parent);
  _$jscoverage['lib/machina.js'][291]++;
  ctor.prototype = parent.prototype;
  _$jscoverage['lib/machina.js'][292]++;
  fsm.prototype = new ctor();
  _$jscoverage['lib/machina.js'][296]++;
  if (protoProps) {
    _$jscoverage['lib/machina.js'][297]++;
    _.deepExtend(fsm.prototype, protoProps);
  }
  _$jscoverage['lib/machina.js'][301]++;
  if (staticProps) {
    _$jscoverage['lib/machina.js'][302]++;
    _.deepExtend(fsm, staticProps);
  }
  _$jscoverage['lib/machina.js'][306]++;
  fsm.prototype.constructor = fsm;
  _$jscoverage['lib/machina.js'][309]++;
  fsm.__super__ = parent.prototype;
  _$jscoverage['lib/machina.js'][311]++;
  return fsm;
});
  _$jscoverage['lib/machina.js'][315]++;
  Fsm.extend = (function (protoProps, classProps) {
  _$jscoverage['lib/machina.js'][316]++;
  var fsm = inherits(this, protoProps, classProps);
  _$jscoverage['lib/machina.js'][317]++;
  fsm.extend = this.extend;
  _$jscoverage['lib/machina.js'][318]++;
  return fsm;
});
  _$jscoverage['lib/machina.js'][320]++;
  var machina = {Fsm: Fsm, utils: utils, on: (function (eventName, callback) {
  _$jscoverage['lib/machina.js'][324]++;
  if (! this.eventListeners[eventName]) {
    _$jscoverage['lib/machina.js'][325]++;
    this.eventListeners[eventName] = [];
  }
  _$jscoverage['lib/machina.js'][327]++;
  this.eventListeners[eventName].push(callback);
  _$jscoverage['lib/machina.js'][328]++;
  return callback;
}), off: (function (eventName, callback) {
  _$jscoverage['lib/machina.js'][331]++;
  if (this.eventListeners[eventName]) {
    _$jscoverage['lib/machina.js'][332]++;
    this.eventListeners[eventName] = _.without(this.eventListeners[eventName], callback);
  }
}), trigger: (function (eventName) {
  _$jscoverage['lib/machina.js'][336]++;
  var i = 0, len, args = arguments, listeners = this.eventListeners[eventName] || [];
  _$jscoverage['lib/machina.js'][337]++;
  if (listeners && listeners.length) {
    _$jscoverage['lib/machina.js'][338]++;
    _.each(listeners, (function (callback) {
  _$jscoverage['lib/machina.js'][339]++;
  callback.apply(null, slice.call(args, 1));
}));
  }
}), eventListeners: {newFsm: []}};
  _$jscoverage['lib/machina.js'][348]++;
  machina.emit = machina.trigger;
  _$jscoverage['lib/machina.js'][349]++;
  return machina;
}));
_$jscoverage['lib/machina.js'].source = ["/**"," machina"," Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)"," License: Dual licensed MIT (http://www.opensource.org/licenses/mit-license) &amp; GPL (http://www.opensource.org/licenses/gpl-license)"," Version 0.3.4"," */","(function ( root, factory ) {","    if ( typeof module === \"object\" &amp;&amp; module.exports ) {","        // Node, or CommonJS-Like environments","        module.exports = function ( _ ) {","            _ = _ || require( 'underscore' );","            return factory( _ );","        };","    } else if ( typeof define === \"function\" &amp;&amp; define.amd ) {","        // AMD. Register as an anonymous module.","        define( [\"underscore\"], function ( _ ) {","            return factory( _, root );","        } );","    } else {","        // Browser globals","        root.machina = factory( root._, root );","    }","}( this, function ( _, global, undefined ) {","    var slice = [].slice;","    var NEXT_TRANSITION = \"transition\";","    var NEXT_HANDLER = \"handler\";","    var HANDLING = \"handling\";","    var HANDLED = \"handled\";","    var NO_HANDLER = \"nohandler\";","    var TRANSITION = \"transition\";","    var INVALID_STATE = \"invalidstate\";","    var DEFERRED = \"deferred\";","    var NEW_FSM = \"newfsm\";","    var utils = {","        makeFsmNamespace : (function () {","            var machinaCount = 0;","            return function () {","                return \"fsm.\" + machinaCount++;","            };","        })(),","        getDefaultOptions : function () {","            return {","                initialState : \"uninitialized\",","                eventListeners : {","                    \"*\" : []","                },","                states : {},","                eventQueue : [],","                namespace : utils.makeFsmNamespace(),","                targetReplayState : \"\",","                state : undefined,","                priorState : undefined,","                _priorAction : \"\",","                _currentAction : \"\"","            };","        }","    };","","    if ( !_.deepExtend ) {","        var behavior = {","                \"*\" : function ( obj, sourcePropKey, sourcePropVal ) {","                    obj[sourcePropKey] = sourcePropVal;","                },","                \"object\" : function ( obj, sourcePropKey, sourcePropVal ) {","                    obj[sourcePropKey] = deepExtend( {}, obj[sourcePropKey] || {}, sourcePropVal );","                },","                \"array\" : function ( obj, sourcePropKey, sourcePropVal ) {","                    obj[sourcePropKey] = [];","                    _.each( sourcePropVal, function ( item, idx ) {","                        behavior[getHandlerName( item )]( obj[sourcePropKey], idx, item );","                    }, this );","                }","            },","            getActualType = function ( val ) {","                if ( _.isArray( val ) ) {","                    return \"array\";","                }","                if ( _.isDate( val ) ) {","                    return \"date\";","                }","                if ( _.isRegExp( val ) ) {","                    return \"regex\";","                }","                return typeof val;","            },","            getHandlerName = function ( val ) {","                var propType = getActualType( val );","                return behavior[propType] ? propType : \"*\";","            },","            deepExtend = function ( obj ) {","                _.each( slice.call( arguments, 1 ), function ( source ) {","                    _.each( source, function ( sourcePropVal, sourcePropKey ) {","                        behavior[getHandlerName( sourcePropVal )]( obj, sourcePropKey, sourcePropVal );","                    } );","                } );","                return obj;","            };","","        _.mixin( {","            deepExtend : deepExtend","        } );","    }","    var Fsm = function ( options ) {","        _.extend( this, options );","        _.defaults(this, utils.getDefaultOptions());","        this.initialize.apply(this, arguments);","        machina.emit( NEW_FSM, this );","        if ( this.initialState ) {","            this.transition( this.initialState );","        }","    };","","    _.extend( Fsm.prototype, {","        initialize: function() { },","        emit : function ( eventName ) {","            var args = arguments;","            if(this.eventListeners[\"*\"]) {","                _.each( this.eventListeners[\"*\"], function ( callback ) {","                    try {","                        callback.apply( this, slice.call( args, 0 ) );","                    } catch ( exception ) {","                        if ( console &amp;&amp; typeof console.log !== \"undefined\" ) {","                            console.log( exception.toString() );","                        }","                    }","                }, this );","            }","            if ( this.eventListeners[eventName] ) {","                _.each( this.eventListeners[eventName], function ( callback ) {","                    try {","                        callback.apply( this, slice.call( args, 1 ) );","                    } catch ( exception ) {","                        if ( console &amp;&amp; typeof console.log !== \"undefined\" ) {","                            console.log( exception.toString() );","                        }","                    }","                }, this );","            }","        },","        handle : function ( inputType ) {","            if ( !this.inExitHandler ) {","                var states = this.states, current = this.state, args = slice.call( arguments, 0 ), handlerName, handler, catchAll, action;","                this.currentActionArgs = args;","                if ( states[current][inputType] || states[current][\"*\"] || this[ \"*\" ] ) {","                    handlerName = states[current][inputType] ? inputType : \"*\";","                    catchAll = handlerName === \"*\";","                    if ( states[current][handlerName] ) {","                        handler = states[current][handlerName];","                        action = current + \".\" + handlerName;","                    } else {","                        handler = this[ \"*\" ];","                        action = \"*\";","                    }","                    if ( ! this._currentAction )","                        this._currentAction = action ;","                    this.emit.call( this, HANDLING, { inputType: inputType, args: args.slice(1) } );","                    if (_.isFunction(handler))","                        handler = handler.apply( this, catchAll ? args : args.slice( 1 ) );","                    if (_.isString(handler))","                        this.transition( handler ) ;","                    this.emit.call( this, HANDLED, { inputType: inputType, args: args.slice(1) } );","                    this._priorAction = this._currentAction;","                    this._currentAction = \"\";","                    this.processQueue( NEXT_HANDLER );","                }","                else {","                    this.emit.call( this, NO_HANDLER, { inputType: inputType, args: args.slice(1) } );","                }","                this.currentActionArgs = undefined;","            }","        },","        transition : function ( newState ) {","            if ( !this.inExitHandler &amp;&amp; newState !== this.state ) {","                var oldState;","                if ( this.states[newState] ) {","                    this.targetReplayState = newState;","                    this.priorState = this.state;","                    this.state = newState;","                    oldState = this.priorState;","                    if ( this.states[oldState] &amp;&amp; this.states[oldState]._onExit ) {","                        this.inExitHandler = true;","                        this.states[oldState]._onExit.call( this );","                        this.inExitHandler = false;","                    }","                    this.emit.call( this, TRANSITION, { fromState: oldState, action: this._currentAction, toState: newState } );","                    if ( this.states[newState]._onEnter ) {","                        this.states[newState]._onEnter.call( this );","                    }","                    if ( this.targetReplayState === newState ) {","                        this.processQueue( NEXT_TRANSITION );","                    }","                    return;","                }","                this.emit.call( this, INVALID_STATE, { state: this.state, attemptedState: newState } );","            }","        },","        processQueue : function ( type ) {","            var filterFn = type === NEXT_TRANSITION ? function ( item ) {","                    return item.type === NEXT_TRANSITION &amp;&amp; ((!item.untilState) || (item.untilState === this.state));","                } : function ( item ) {","                    return item.type === NEXT_HANDLER;","                };","            var toProcess = _.filter( this.eventQueue, filterFn, this );","            this.eventQueue = _.difference( this.eventQueue, toProcess );","            _.each( toProcess, function ( item ) {","                this.handle.apply( this, item.args );","            }, this );","        },","        clearQueue : function ( type, name ) {","            if(!type) {","                this.eventQueue = [];","            } else {var filter;","                if ( type === NEXT_TRANSITION ) {","                    filter = function ( evnt ) {","                        return (evnt.type === NEXT_TRANSITION &amp;&amp; (name ? evnt.untilState === name : true ));","                    };","                } else if ( type === NEXT_HANDLER ) {","                    filter = function ( evnt ) {","                        return evnt.type === NEXT_HANDLER;","                    };","                }","                this.eventQueue = _.filter( this.eventQueue, filter );","            }","        },","        deferUntilTransition : function ( stateName ) {","            if ( this.currentActionArgs ) {","                var queued = { type : NEXT_TRANSITION, untilState : stateName, args : this.currentActionArgs };","                this.eventQueue.push( queued );","                this.emit.call( this, DEFERRED, { state: this.state, queuedArgs: queued } );","            }","        },","        deferUntilNextHandler : function () {","            if ( this.currentActionArgs ) {","                var queued = { type : NEXT_TRANSITION, args : this.currentActionArgs };","                this.eventQueue.push( queued );","                this.emit.call( this, DEFERRED, { state: this.state, queuedArgs: queued } );","            }","        },","        on : function ( eventName, callback ) {","            var self = this;","            if ( !self.eventListeners[eventName] ) {","                self.eventListeners[eventName] = [];","            }","            self.eventListeners[eventName].push( callback );","            return {","                eventName: eventName,","                callback: callback,","                off: function() {","                    self.off(eventName, callback);","                }","            };","        },","        off : function ( eventName, callback ) {","            if(!eventName) {","                this.eventListeners = {};","            } else {","                if ( this.eventListeners[eventName] ) {","                    if(callback) {","                        this.eventListeners[eventName] = _.without( this.eventListeners[eventName], callback );","                    } else {","                        this.eventListeners[eventName] = [];","                    }","                }","            }","        }","    } );","","    Fsm.prototype.trigger = Fsm.prototype.emit;","","    var ctor = function () {};","","    var inherits = function ( parent, protoProps, staticProps ) {","        var fsm;","","        // The constructor function for the new subclass is either defined by you","        // (the \"constructor\" property in your `extend` definition), or defaulted","        // by us to simply call the parent's constructor.","        if ( protoProps &amp;&amp; protoProps.hasOwnProperty( 'constructor' ) ) {","            fsm = protoProps.constructor;","        } else {","            fsm = function () {","                parent.apply( this, arguments );","            };","        }","","        // Inherit class (static) properties from parent.","        _.deepExtend( fsm, parent );","","        // Set the prototype chain to inherit from `parent`, without calling","        // `parent`'s constructor function.","        ctor.prototype = parent.prototype;","        fsm.prototype = new ctor();","","        // Add prototype properties (instance properties) to the subclass,","        // if supplied.","        if ( protoProps ) {","            _.deepExtend( fsm.prototype, protoProps );","        }","","        // Add static properties to the constructor function, if supplied.","        if ( staticProps ) {","            _.deepExtend( fsm, staticProps );","        }","","        // Correctly set child's `prototype.constructor`.","        fsm.prototype.constructor = fsm;","","        // Set a convenience property in case the parent's prototype is needed later.","        fsm.__super__ = parent.prototype;","","        return fsm;","    };","","    // The self-propagating extend function that Backbone classes use.","    Fsm.extend = function ( protoProps, classProps ) {","        var fsm = inherits( this, protoProps, classProps );","        fsm.extend = this.extend;","        return fsm;","    };","    var machina = {","        Fsm : Fsm,","        utils : utils,","        on : function ( eventName, callback ) {","            if ( !this.eventListeners[eventName] ) {","                this.eventListeners[eventName] = [];","            }","            this.eventListeners[eventName].push( callback );","            return callback;","        },","        off : function ( eventName, callback ) {","            if ( this.eventListeners[eventName] ) {","                this.eventListeners[eventName] = _.without( this.eventListeners[eventName], callback );","            }","        },","        trigger : function ( eventName ) {","            var i = 0, len, args = arguments, listeners = this.eventListeners[eventName] || [];","            if ( listeners &amp;&amp; listeners.length ) {","                _.each( listeners, function ( callback ) {","                    callback.apply( null, slice.call( args, 1 ) );","                } );","            }","        },","        eventListeners : {","            newFsm : []","        }","    };","","    machina.emit = machina.trigger;","    return machina;","} ));"];
